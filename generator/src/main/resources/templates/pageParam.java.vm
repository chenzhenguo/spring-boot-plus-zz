package ${cfg.pageParamPackage};

import io.swagger.annotations.ApiModel;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.experimental.Accessors;

/**
 * <pre>
 * $!{table.comment} 分页参数对象
 * </pre>
 *
 * @author ${author}
 * @date ${date}
 */
@Data
@Accessors(chain = true)
@EqualsAndHashCode(callSuper = true)
@ApiModel(value = "$!{table.comment}分页参数")
#if(${cfg.pageListOrder})
public class ${entity}${cfg.pageParam} extends BasePageOrderParam {
#else
public class ${entity}${cfg.pageParam} extends BaseParam {
#end
    private static final long serialVersionUID = 1L;


## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})
    ## 如果没有默认值，且不为空，则设置非空校验
    #if(${cfg.paramValidation} && ${field.customMap.null} == 'NO' && !${field.customMap.default})
        #if(${field.keyIdentityFlag})
        @NotNull(message = "${field.propertyName}不能为空", groups = {Update.class})
        #elseif(${field.propertyType} == 'String')
        @NotBlank(message = "${field.comment}不能为空")
        #else
        @NotNull(message = "${field.comment}不能为空")
        #end
    #end
    #if("$!field.comment" != "")
        #if(${swagger2})
        @ApiModelProperty("${field.comment}")
        #else
        /**
         * ${field.comment}
         */
        #end
    #end
    #if(${field.keyFlag})
        ## 主键
        #if(${field.keyIdentityFlag})
        @TableId(value = "${field.name}", type = IdType.AUTO)
        #elseif(!$null.isNull(${idType}) && "$!idType" != "")
            ## 设置主键注解
        @TableId(value = "${field.name}", type = IdType.${idType})
        #elseif(${field.convert})
        @TableId("${field.name}")
        #end
        ## 普通字段
    #elseif(${field.fill})
        ## -----   存在字段填充设置   -----
        #if(${field.convert})
        @TableField(value = "${field.name}", fill = FieldFill.${field.fill})
        #else
        @TableField(fill = FieldFill.${field.fill})
        #end
    #elseif(${field.convert})
    @TableField("${field.name}")
    #end
    ## 乐观锁注解
    #if(${versionFieldName}==${field.name})
    @Version
    #end
    ## 逻辑删除注解
    #if(${logicDeleteFieldName}==${field.name})
    @TableLogic
    #end
private ${field.propertyType} ${field.propertyName};

#end
}
